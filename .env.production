# ===========================================
# CONFIGURAÇÕES DE PRODUÇÃO - BOT HAWK ESPORTS
# ===========================================

# AMBIENTE
NODE_ENV=production

# ===========================================
# DISCORD CONFIGURATION
# ===========================================
# Como obter:
# 1. Acesse https://discord.com/developers/applications
# 2. Selecione sua aplicação ou crie uma nova
# 3. Na aba "Bot", copie o Token
# 4. Na aba "General Information", copie o Application ID (Client ID)
DISCORD_TOKEN=seu_discord_bot_token_aqui
DISCORD_CLIENT_ID=seu_discord_client_id_aqui

# ===========================================
# DATABASE CONFIGURATION (PostgreSQL)
# ===========================================
# Para Render.com (gratuito):
# 1. Acesse https://render.com/
# 2. Crie um PostgreSQL Database (gratuito)
# 3. Copie a External Database URL
# Formato: postgresql://username:password@hostname:port/database
DATABASE_URL=postgresql://username:password@hostname:port/database_name

# ===========================================
# REDIS CONFIGURATION
# ===========================================
# Para Render.com (gratuito):
# 1. Crie um Redis service no Render.com
# 2. Copie a Redis URL
# Formato: redis://hostname:port
REDIS_URL=redis://hostname:port

# Alternativa gratuita - Upstash Redis:
# 1. Acesse https://upstash.com/
# 2. Crie um database Redis gratuito
# 3. Copie a Redis URL
# REDIS_URL=rediss://username:password@hostname:port

# ===========================================
# API CONFIGURATION
# ===========================================
# Porta para o servidor (Render.com usa PORT automaticamente)
PORT=3000

# ===========================================
# SECURITY CONFIGURATION
# ===========================================
# JWT Secret para autenticação (gere uma chave segura)
JWT_SECRET=sua_chave_jwt_super_secreta_aqui

# ===========================================
# CORS CONFIGURATION
# ===========================================
# URLs permitidas para CORS (adicione o domínio da sua dashboard)
CORS_ORIGIN=https://seu-dashboard.vercel.app,https://localhost:3000

# ===========================================
# LOGGING CONFIGURATION
# ===========================================
LOG_LEVEL=info

# ===========================================
# RATE LIMITING
# ===========================================
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ===========================================
# INSTRUÇÕES DE CONFIGURAÇÃO
# ===========================================
# 
# 1. DISCORD:
#    - Vá para https://discord.com/developers/applications
#    - Crie uma nova aplicação ou selecione existente
#    - Na aba "Bot": copie o Token
#    - Na aba "General Information": copie o Application ID
#
# 2. DATABASE (PostgreSQL):
#    - Render.com: Crie PostgreSQL Database (750h gratuitas/mês)
#    - Supabase: Crie projeto gratuito (500MB)
#    - ElephantSQL: Plano gratuito (20MB)
#
# 3. REDIS:
#    - Render.com: Crie Redis service (gratuito)
#    - Upstash: Plano gratuito (10k comandos/dia)
#    - Redis Labs: Plano gratuito (30MB)
#
# 4. DEPLOY:
#    - Bot: Render.com (750h gratuitas/mês)
#    - Dashboard: Vercel (gratuito ilimitado)
#
# 5. DOMÍNIO (opcional):
#    - Freenom: Domínios .tk, .ml, .ga gratuitos
#    - No-IP: Subdomínio gratuito
#