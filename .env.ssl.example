# SSL/TLS Configuration for Hawk Esports Bot
# Copy this file to .env.ssl and configure your SSL settings

# =============================================================================
# SSL CERTIFICATE CONFIGURATION
# =============================================================================

# Domain name for SSL certificate
# For production, use your actual domain (e.g., bot.hawkesports.com)
# For development/testing, use localhost
DOMAIN=localhost

# Email address for Let's Encrypt registration
# This email will receive notifications about certificate expiration
SSL_EMAIL=admin@hawkesports.com

# Use Let's Encrypt staging environment for testing
# Set to 'true' for testing, 'false' for production
SSL_STAGING=false

# =============================================================================
# SSL CERTIFICATE RENEWAL SETTINGS
# =============================================================================

# Certificate renewal interval in seconds
# Default: 43200 (12 hours)
SSL_RENEWAL_INTERVAL=43200

# Certificate health check interval in seconds
# Default: 3600 (1 hour)
SSL_CHECK_INTERVAL=3600

# Alert threshold in days before certificate expiration
# Default: 30 days
SSL_ALERT_DAYS=30

# =============================================================================
# SSL SECURITY SETTINGS
# =============================================================================

# SSL/TLS protocol versions to support
# Recommended: TLSv1.2 and TLSv1.3 only
SSL_PROTOCOLS="TLSv1.2 TLSv1.3"

# SSL cipher suites (high security)
SSL_CIPHERS="ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"

# Enable HSTS (HTTP Strict Transport Security)
# Recommended: true for production
SSL_HSTS_ENABLED=true

# HSTS max age in seconds (1 year)
SSL_HSTS_MAX_AGE=31536000

# Include subdomains in HSTS
SSL_HSTS_INCLUDE_SUBDOMAINS=true

# =============================================================================
# SSL MONITORING AND ALERTING
# =============================================================================

# Webhook URL for SSL alerts (optional)
# Example: Slack webhook, Discord webhook, or custom endpoint
# WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
WEBHOOK_URL=

# Enable SSL monitoring dashboard
SSL_MONITORING_ENABLED=true

# SSL monitoring dashboard port
SSL_MONITORING_PORT=8443

# =============================================================================
# CERTIFICATE BACKUP SETTINGS
# =============================================================================

# Enable automatic certificate backup
SSL_BACKUP_ENABLED=true

# Certificate backup directory
SSL_BACKUP_DIR=./backups/ssl

# Number of certificate backups to keep
SSL_BACKUP_RETENTION=30

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Force SSL certificate regeneration on startup
# Useful for development/testing
SSL_FORCE_REGENERATE=false

# Keep certbot container running for debugging
SSL_KEEP_CERTBOT_RUNNING=false

# Enable verbose SSL logging
SSL_VERBOSE_LOGGING=false

# =============================================================================
# NGINX SSL CONFIGURATION
# =============================================================================

# SSL session cache settings
SSL_SESSION_CACHE="shared:SSL:10m"
SSL_SESSION_TIMEOUT="10m"

# SSL buffer size (for performance)
SSL_BUFFER_SIZE="16k"

# Enable SSL stapling (OCSP)
SSL_STAPLING=true

# SSL stapling verify
SSL_STAPLING_VERIFY=true

# =============================================================================
# SECURITY HEADERS
# =============================================================================

# Content Security Policy
CSP_HEADER="default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:;"

# X-Frame-Options
X_FRAME_OPTIONS="DENY"

# X-Content-Type-Options
X_CONTENT_TYPE_OPTIONS="nosniff"

# Referrer Policy
REFERRER_POLICY="strict-origin-when-cross-origin"

# Permissions Policy
PERMISSIONS_POLICY="geolocation=(), microphone=(), camera=()"

# =============================================================================
# PRODUCTION OVERRIDES
# =============================================================================

# Override settings for production environment
# Uncomment and modify as needed for production deployment

# Production domain
# DOMAIN=bot.hawkesports.com

# Production email
# SSL_EMAIL=ssl-admin@hawkesports.com

# Disable staging for production
# SSL_STAGING=false

# Production webhook for alerts
# WEBHOOK_URL=https://your-monitoring-system.com/webhook

# Enable all security features for production
# SSL_HSTS_ENABLED=true
# SSL_STAPLING=true
# SSL_STAPLING_VERIFY=true

# =============================================================================
# NOTES
# =============================================================================

# 1. For localhost development:
#    - Set DOMAIN=localhost
#    - Self-signed certificates will be generated automatically
#    - SSL_STAGING setting is ignored for localhost

# 2. For production with real domain:
#    - Set DOMAIN to your actual domain name
#    - Set SSL_EMAIL to a valid email address
#    - Set SSL_STAGING=false for production certificates
#    - Ensure your domain points to your server's IP address

# 3. Let's Encrypt rate limits:
#    - 50 certificates per registered domain per week
#    - 5 duplicate certificates per week
#    - Use staging environment for testing to avoid hitting limits

# 4. Certificate renewal:
#    - Certificates are automatically renewed when they have 30 days or less remaining
#    - Renewal attempts are made every 12 hours by default
#    - Failed renewals are logged and can trigger alerts

# 5. Security considerations:
#    - Keep this file secure and don't commit sensitive values to version control
#    - Use strong cipher suites and disable weak protocols
#    - Enable HSTS for production to prevent downgrade attacks
#    - Monitor certificate expiration and renewal status