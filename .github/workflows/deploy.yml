name: Deploy Bot Hawk Esports

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build

  deploy-bot:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Railway
      uses: railway-app/railway-action@v1
      with:
        railway-token: ${{ secrets.RAILWAY_TOKEN }}
        service: bot-hawk-esports
        
  deploy-dashboard:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dashboard dependencies
      run: |
        cd dashboard
        npm ci
        
    - name: Build dashboard
      run: |
        cd dashboard
        npm run build
        
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./dashboard
        
  backup:
    needs: [deploy-bot, deploy-dashboard]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create backup
      run: |
        tar -czf backup-$(date +%Y%m%d-%H%M%S).tar.gz \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=dashboard/node_modules \
          --exclude=dashboard/dist \
          .
        
    - name: Upload to Google Drive
      uses: adityak74/google-drive-upload-git-action@main
      with:
        credentials: ${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}
        filename: backup-$(date +%Y%m%d-%H%M%S).tar.gz
        folderId: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
        
  notify:
    needs: [deploy-bot, deploy-dashboard, backup]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify Discord
      uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        status: ${{ job.status }}
        title: "Bot Hawk Esports Deploy"
        description: |
          **Bot Status:** ${{ needs.deploy-bot.result }}
          **Dashboard Status:** ${{ needs.deploy-dashboard.result }}
          **Backup Status:** ${{ needs.backup.result }}
          
          **Commit:** ${{ github.sha }}
          **Author:** ${{ github.actor }}
        color: ${{ job.status == 'success' && 0x00ff00 || 0xff0000 }}